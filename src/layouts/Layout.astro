---
interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Ondrej Michal's Site" />
		<meta name="author" content="Ondrej Michal Očkaj" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/png" href="https://avatars.githubusercontent.com/u/36997301?v=4" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<link rel="preconnect" href="https://fonts.googleapis.com" />
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
		<link rel="preconnect" href="https://avatars.githubusercontent.com" crossorigin />
		<link
			rel="preload"
			href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap"
			as="style"
			onload="this.onload=null;this.rel='stylesheet'"
		/>
		<noscript>
			<link
				href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap"
				rel="stylesheet"
			/>
		</noscript>
	</head>
	<body>
		<div class="background">
			<div class="blob-1"></div>
			<div class="blob-2"></div>
		</div>
		<slot />
	</body>
</html>
<style is:global>
	:root {
		--glass-border: rgba(102, 103, 171, 0.1);
		--text-primary: #ffffff;
		--text-secondary: rgba(255, 255, 255, 0.85);
		--purple-primary: 102, 103, 171;
		--background: 6, 0, 16;
		--focus-ring: 0 0 0 3px rgba(102, 103, 171, 0.5);
	}
	* {
		margin: 0;
		padding: 0;
		box-sizing: border-box;
	}
	html {
		font-family: 'Inter', system-ui, sans-serif;
		background: #000000;
		color: var(--text-primary);
		min-height: 100vh;
		overflow-x: hidden;
		scroll-behavior: smooth;
	}
	body {
		min-height: 100vh;
		position: relative;
		overflow: hidden;
	}
	.background {
		position: fixed;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		z-index: -1;
		background: radial-gradient(
			circle at top right,
			rgba(var(--purple-primary), 0.15) 0%,
			rgba(var(--background), 0.95) 60%
		);
	}

	.glass {
		background: linear-gradient(
			45deg,
			rgba(102, 103, 171, 0.05) 0%,
			rgba(255, 255, 255, 0.05) 100%
		);
		border-radius: 16px;
		box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
		backdrop-filter: blur(20px);
		border: 2px solid var(--glass-border);
		padding: 2rem;
		transition:
			border-color 0.3s ease,
			background 0.3s ease;
	}

	.glass:focus-visible {
		outline: none;
		box-shadow: var(--focus-ring);
		border-color: rgba(102, 103, 171, 0.3);
	}

	.second-glass {
		background: linear-gradient(
			45deg,
			rgba(166, 166, 255, 0.05) 0%,
			rgba(255, 255, 255, 0.05) 100%
		);
		border-radius: 16px;
		box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);
		backdrop-filter: blur(20px);
		border: 2px solid var(--glass-border);
		padding: 2rem;
		transition:
			border-color 0.3s ease,
			background 0.3s ease;
	}

	.second-glass:focus-visible {
		outline: none;
		box-shadow: var(--focus-ring);
		border-color: rgba(166, 166, 255, 0.3);
	}

	@media (prefers-reduced-motion: reduce) {
		.blob-1,
		.blob-2 {
			animation: none !important;
			transition: none !important;
		}

		*,
		*::before,
		*::after {
			animation-duration: 0.01ms !important;
			animation-iteration-count: 1 !important;
			transition-duration: 0.01ms !important;
			scroll-behavior: auto !important;
		}
	}

	.blob-1,
	.blob-2 {
		position: absolute;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
		filter: blur(40px);
		z-index: -1;
		opacity: 0.9;
		will-change: transform, border-radius;
		transform-origin: center center;
		backface-visibility: hidden;
	}
	.blob-1 {
		width: 400px;
		height: 400px;
		background: linear-gradient(-45deg, #1e1f79, #e742ed);
		border-radius: 45% 55% 63% 37% / 40% 60% 65% 35%;
		animation: blob1Animation 20s infinite;
	}

	.blob-2 {
		width: 300px;
		height: 300px;
		background: linear-gradient(45deg, #af42ed, #427bed);
		border-radius: 54% 46% 50% 50% / 50% 50% 46% 54%;
		animation: blob2Animation 20s infinite;
	}

	@keyframes blob1Animation {
		0%,
		100% {
			transform: translate(-50%, -50%) scale(1) rotate(0deg);
			border-radius: 45% 55% 63% 37% / 40% 60% 65% 35%;
		}
		25% {
			transform: translate(-65%, -35%) scale(1.2) rotate(90deg);
			border-radius: 50% 50% 60% 40% / 45% 55% 60% 40%;
		}
		50% {
			transform: translate(-35%, -65%) scale(1.3) rotate(180deg);
			border-radius: 60% 40% 50% 50% / 55% 45% 50% 50%;
		}
		75% {
			transform: translate(-50%, -50%) scale(1.1) rotate(270deg);
			border-radius: 55% 45% 60% 40% / 45% 55% 60% 40%;
		}
	}

	@keyframes blob2Animation {
		0%,
		100% {
			transform: translate(-50%, -50%) scale(1) rotate(0deg);
			border-radius: 54% 46% 50% 50% / 50% 50% 46% 54%;
		}
		25% {
			transform: translate(-35%, -65%) scale(1.3) rotate(-90deg);
			border-radius: 50% 50% 60% 40% / 45% 55% 60% 40%;
		}
		50% {
			transform: translate(-65%, -35%) scale(1.4) rotate(-180deg);
			border-radius: 60% 40% 50% 50% / 55% 45% 50% 50%;
		}
		75% {
			transform: translate(-50%, -50%) scale(1.2) rotate(-270deg);
			border-radius: 55% 45% 60% 40% / 45% 55% 60% 40%;
		}
	}
</style>
