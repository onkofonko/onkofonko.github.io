---
import ThemeToggle from '../components/ThemeToggle.astro';
interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html
	lang="en"
	class="relative m-0 min-h-[100vh] w-full overflow-x-hidden p-0 text-[color:var(--text-primary)]"
>
	<head>
		<script is:inline>
			(function () {
				const THEME_STATE_KEY = 'themeState';
				const THEME_USER_SOURCE = 'user';
				const LIGHT_THEME = 'light';
				const DARK_THEME = 'dark';

				const getSystemPreference = () => {
					if (window.matchMedia && typeof window.matchMedia === 'function') {
						const mediaQuery = window.matchMedia('(prefers-color-scheme: light)');
						if (mediaQuery && typeof mediaQuery.matches === 'boolean') {
							return mediaQuery.matches ? LIGHT_THEME : DARK_THEME;
						}
					}
					return DARK_THEME;
				};

				let theme = getSystemPreference();

				try {
					const storedStateString = localStorage.getItem(THEME_STATE_KEY);
					if (storedStateString) {
						const parsedState = JSON.parse(storedStateString);
						if (
							parsedState &&
							typeof parsedState.theme === 'string' &&
							(parsedState.theme === LIGHT_THEME || parsedState.theme === DARK_THEME) &&
							typeof parsedState.source === 'string' &&
							parsedState.source === THEME_USER_SOURCE
						) {
							theme = parsedState.theme;
						}
					}
				} catch {
					console.error('[Theme] Error reading theme state from localStorage');
				}

				document.documentElement.setAttribute('data-theme', theme);
			})();
		</script>
		<meta charset="UTF-8" />
		<meta name="description" content="Ondrej Michal's Site" />
		<meta name="author" content="Ondrej Michal Očkaj" />
		<meta name="viewport" content="width=device-width, initial-scale=1" />
		<link
			rel="icon"
			type="image/png"
			href="https://avatars.githubusercontent.com/u/36997301?v=4&s=16"
		/>
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<link rel="preconnect" href="https://fonts.googleapis.com" />
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
		<link
			href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap"
			rel="stylesheet"
		/>
		<link rel="preconnect" href="https://avatars.githubusercontent.com" crossorigin />
		<link
			rel="preload"
			href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap"
			as="style"
			onload="this.onload=null;this.rel='stylesheet'"
		/>
		<noscript>
			<link
				href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap"
				rel="stylesheet"
			/>
		</noscript>
	</head>
	<body class="relative m-0 min-h-[100vh] w-full p-0">
		<div class="animated-background">
			<div class="noise"></div>
			<div class="blob-1"></div>
			<div class="blob-2"></div>
		</div>

		<ThemeToggle />
		<main class="flex min-h-[100vh]">
			<slot />
		</main>
	</body>
</html>
<style is:global>
	html,
	body {
		font-family: 'Inter', system-ui, sans-serif;
		background: rgb(var(--background-rgb));
		scrollbar-width: none;
		-webkit-overflow-scrolling: touch;
		color-scheme: dark light;
	}

	html::-webkit-scrollbar {
		display: none;
	}
</style>
